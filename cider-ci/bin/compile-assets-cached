#!/usr/bin/env bash
set -euxo

# project-specific config:
WORK_DIR="$LEIHS_LEGACY_DIR"

ARTEFACT_NAME="leihs-legacy-assets"
# DIGEST="$(cd "$WORK_DIR" && git log -n 1 HEAD --pretty=%T)"
DIGEST=`git ls-tree HEAD --\
  app/assets \
  node_modules package.json package-lock.json yarn.lock \
  .postcssrc.yml .babelrc \
  config Gemfile.lock database/Gemfile.lock \
  cider-ci cider-ci.yml \
| openssl dgst -sha1 | cut -d ' ' -f 2`

ARTEFACT_DIR="./public/assets"                              # path of artefact *relative to* working dir
LOCAL_CACHED_ARTEFACT="/tmp/${ARTEFACT_NAME}_${DIGEST}.tgz" # path of locally cached artefact
S3_CACHED_ARTEFACT="${ARTEFACT_NAME}_${DIGEST}.tgz"         # name of the artefact in the S3 Bucket

function create_artefacts() {
  bin/recompile-assets
}

# generic part (same for every project):
cd "$WORK_DIR"
export PATH=~/.rubies/$RUBY/bin:$PATH # the s3-cache-helper needs this
# check if already locally cached
if [ -e $LOCAL_CACHED_ARTEFACT ]; then
    echo "INFO: locally cached artefact found; extracting and exiting"
    tar -xvz -f "$LOCAL_CACHED_ARTEFACT"
    exit 0
# try to download from global cache
else
  s3-cache-helper download -n "$S3_CACHED_ARTEFACT" -p "$LOCAL_CACHED_ARTEFACT"
  # build the artefact if it was not downloaded
  if [ ! -f ${LOCAL_CACHED_ARTEFACT} ]; then
    create_artefacts
    tar -cvz -f "$LOCAL_CACHED_ARTEFACT" "$ARTEFACT_DIR"
    s3-cache-helper upload -n "$S3_CACHED_ARTEFACT" -p "$LOCAL_CACHED_ARTEFACT"
  fi
  # extract the either downloaded or build artefact
  tar -xvz -f "$LOCAL_CACHED_ARTEFACT"
fi
